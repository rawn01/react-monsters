{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/Search/Search.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","this","monsters","map","React","Component","Search","type","value","searchString","onChange","handleOnChange","placeholder","App","e","searchText","target","setState","state","fetch","then","res","json","users","filteredMonsters","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAceA,EAVF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLlBC,G,kKACJ,WACE,OACE,qBAAKP,UAAU,YAAf,SACGQ,KAAKT,MAAMU,SAASC,KAAI,SAACR,GACxB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,a,GALbQ,IAAMC,YAYdL,ICAAM,G,YAZA,SAACd,GACd,OACE,uBACEe,KAAK,SACLC,MAAOhB,EAAMiB,aACbC,SAAUlB,EAAMmB,eAChBlB,UAAU,SACVmB,YAAapB,EAAMoB,gBCkCVC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAaFF,eAAiB,SAACG,GAChB,IAAMC,EAAaD,EAAEE,OAAOR,MAC5B,EAAKS,SAAS,CAAER,aAAcM,KAd9B,EAAKG,MAAQ,CACXT,aAAc,GACdP,SAAU,IAJA,E,qDAQd,WAAqB,IAAD,OAClBiB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKN,SAAS,CAAEf,SAAUqB,S,oBAQ/C,WAAU,IAAD,OACDC,EAAmBvB,KAAKiB,MAAMhB,SAASuB,QAAO,SAAC9B,GAAD,OAClDA,EAAQG,KAAK4B,cAAcC,SAAS,EAAKT,MAAMT,iBAGjD,OACE,sBAAKhB,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEgB,aAAcR,KAAKiB,MAAMT,aACzBE,eAAgBV,KAAKU,eACrBC,YAAa,oBAEf,cAAC,EAAD,CAAUV,SAAUsB,W,GAjCVpB,IAAMC,WCDxBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d3d4bdf1.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\nimport \"./CardList.css\";\n\nclass CardList extends React.Component {\n  render() {\n    return (\n      <div className=\"card-list\">\n        {this.props.monsters.map((monster) => {\n          return <Card key={monster.id} monster={monster} />\n        })}\n      </div>\n    );\n  }\n};\n\nexport default CardList;\n","import React from \"react\";\n\nimport \"./Search.css\";\n\nconst Search = (props) => {\n  return (\n    <input\n      type=\"search\"\n      value={props.searchString}\n      onChange={props.handleOnChange}\n      className=\"search\"\n      placeholder={props.placeholder}\n    />\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nimport CardList from \"./components/CardList/CardList.jsx\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search.jsx\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchString: \"\",\n      monsters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleOnChange = (e) => {\n    const searchText = e.target.value;\n    this.setState({ searchString: searchText });\n  };\n\n  render() {\n    const filteredMonsters = this.state.monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(this.state.searchString)\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monstars</h1>\n        <Search\n          searchString={this.state.searchString}\n          handleOnChange={this.handleOnChange}\n          placeholder={\"Search monsters\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}